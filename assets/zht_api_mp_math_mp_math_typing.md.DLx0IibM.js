import{_ as a,c as r,o as e,a2 as l}from"./chunks/framework.BV61Qrc0.js";const p=JSON.parse('{"title":"mbcp.mp_math.mp_math_typing","description":"","frontmatter":{"title":"mbcp.mp_math.mp_math_typing"},"headers":[],"relativePath":"zht/api/mp_math/mp_math_typing.md","filePath":"zht/api/mp_math/mp_math_typing.md"}'),n={name:"zht/api/mp_math/mp_math_typing.md"},o=l('<h3 id="var-realnumber-int-float" tabindex="-1"><em><strong>var</strong></em> <code>RealNumber = int | float</code> <a class="header-anchor" href="#var-realnumber-int-float" aria-label="Permalink to &quot;***var*** `RealNumber = int | float`&quot;">​</a></h3><ul><li><p><strong>類型</strong>: <code>TypeAlias</code></p></li><li><p><strong>説明</strong>: 实数</p></li></ul><h3 id="var-number-realnumber-complex" tabindex="-1"><em><strong>var</strong></em> <code>Number = RealNumber | complex</code> <a class="header-anchor" href="#var-number-realnumber-complex" aria-label="Permalink to &quot;***var*** `Number = RealNumber | complex`&quot;">​</a></h3><ul><li><p><strong>類型</strong>: <code>TypeAlias</code></p></li><li><p><strong>説明</strong>: 数</p></li></ul><h3 id="var-singlevar-typevar-singlevar-bound-number" tabindex="-1"><em><strong>var</strong></em> <code>SingleVar = TypeVar(&#39;SingleVar&#39;, bound=Number)</code> <a class="header-anchor" href="#var-singlevar-typevar-singlevar-bound-number" aria-label="Permalink to &quot;***var*** `SingleVar = TypeVar(&#39;SingleVar&#39;, bound=Number)`&quot;">​</a></h3><ul><li><strong>説明</strong>: 单变量</li></ul><h3 id="var-arrayvar-typevar-arrayvar-bound-iterable-number" tabindex="-1"><em><strong>var</strong></em> <code>ArrayVar = TypeVar(&#39;ArrayVar&#39;, bound=Iterable[Number])</code> <a class="header-anchor" href="#var-arrayvar-typevar-arrayvar-bound-iterable-number" aria-label="Permalink to &quot;***var*** `ArrayVar = TypeVar(&#39;ArrayVar&#39;, bound=Iterable[Number])`&quot;">​</a></h3><ul><li><strong>説明</strong>: 数组变量</li></ul><h3 id="var-var-singlevar-arrayvar" tabindex="-1"><em><strong>var</strong></em> <code>Var = SingleVar | ArrayVar</code> <a class="header-anchor" href="#var-var-singlevar-arrayvar" aria-label="Permalink to &quot;***var*** `Var = SingleVar | ArrayVar`&quot;">​</a></h3><ul><li><p><strong>類型</strong>: <code>TypeAlias</code></p></li><li><p><strong>説明</strong>: 变量</p></li></ul><h3 id="var-onesinglevarfunc-callable-singlevar-singlevar" tabindex="-1"><em><strong>var</strong></em> <code>OneSingleVarFunc = Callable[[SingleVar], SingleVar]</code> <a class="header-anchor" href="#var-onesinglevarfunc-callable-singlevar-singlevar" aria-label="Permalink to &quot;***var*** `OneSingleVarFunc = Callable[[SingleVar], SingleVar]`&quot;">​</a></h3><ul><li><p><strong>類型</strong>: <code>TypeAlias</code></p></li><li><p><strong>説明</strong>: 一元单变量函数</p></li></ul><h3 id="var-onearrayfunc-callable-arrayvar-arrayvar" tabindex="-1"><em><strong>var</strong></em> <code>OneArrayFunc = Callable[[ArrayVar], ArrayVar]</code> <a class="header-anchor" href="#var-onearrayfunc-callable-arrayvar-arrayvar" aria-label="Permalink to &quot;***var*** `OneArrayFunc = Callable[[ArrayVar], ArrayVar]`&quot;">​</a></h3><ul><li><p><strong>類型</strong>: <code>TypeAlias</code></p></li><li><p><strong>説明</strong>: 一元数组函数</p></li></ul><h3 id="var-onevarfunc-onesinglevarfunc-onearrayfunc" tabindex="-1"><em><strong>var</strong></em> <code>OneVarFunc = OneSingleVarFunc | OneArrayFunc</code> <a class="header-anchor" href="#var-onevarfunc-onesinglevarfunc-onearrayfunc" aria-label="Permalink to &quot;***var*** `OneVarFunc = OneSingleVarFunc | OneArrayFunc`&quot;">​</a></h3><ul><li><p><strong>類型</strong>: <code>TypeAlias</code></p></li><li><p><strong>説明</strong>: 一元函数</p></li></ul><h3 id="var-twosinglevarsfunc-callable-singlevar-singlevar-singlevar" tabindex="-1"><em><strong>var</strong></em> <code>TwoSingleVarsFunc = Callable[[SingleVar, SingleVar], SingleVar]</code> <a class="header-anchor" href="#var-twosinglevarsfunc-callable-singlevar-singlevar-singlevar" aria-label="Permalink to &quot;***var*** `TwoSingleVarsFunc = Callable[[SingleVar, SingleVar], SingleVar]`&quot;">​</a></h3><ul><li><p><strong>類型</strong>: <code>TypeAlias</code></p></li><li><p><strong>説明</strong>: 二元单变量函数</p></li></ul><h3 id="var-twoarraysfunc-callable-arrayvar-arrayvar-arrayvar" tabindex="-1"><em><strong>var</strong></em> <code>TwoArraysFunc = Callable[[ArrayVar, ArrayVar], ArrayVar]</code> <a class="header-anchor" href="#var-twoarraysfunc-callable-arrayvar-arrayvar-arrayvar" aria-label="Permalink to &quot;***var*** `TwoArraysFunc = Callable[[ArrayVar, ArrayVar], ArrayVar]`&quot;">​</a></h3><ul><li><p><strong>類型</strong>: <code>TypeAlias</code></p></li><li><p><strong>説明</strong>: 二元数组函数</p></li></ul><h3 id="var-twovarsfunc-twosinglevarsfunc-twoarraysfunc" tabindex="-1"><em><strong>var</strong></em> <code>TwoVarsFunc = TwoSingleVarsFunc | TwoArraysFunc</code> <a class="header-anchor" href="#var-twovarsfunc-twosinglevarsfunc-twoarraysfunc" aria-label="Permalink to &quot;***var*** `TwoVarsFunc = TwoSingleVarsFunc | TwoArraysFunc`&quot;">​</a></h3><ul><li><p><strong>類型</strong>: <code>TypeAlias</code></p></li><li><p><strong>説明</strong>: 二元函数</p></li></ul><h3 id="var-threesinglevarsfunc-callable-singlevar-singlevar-singlevar-singlevar" tabindex="-1"><em><strong>var</strong></em> <code>ThreeSingleVarsFunc = Callable[[SingleVar, SingleVar, SingleVar], SingleVar]</code> <a class="header-anchor" href="#var-threesinglevarsfunc-callable-singlevar-singlevar-singlevar-singlevar" aria-label="Permalink to &quot;***var*** `ThreeSingleVarsFunc = Callable[[SingleVar, SingleVar, SingleVar], SingleVar]`&quot;">​</a></h3><ul><li><p><strong>類型</strong>: <code>TypeAlias</code></p></li><li><p><strong>説明</strong>: 三元单变量函数</p></li></ul><h3 id="var-threearraysfunc-callable-arrayvar-arrayvar-arrayvar-arrayvar" tabindex="-1"><em><strong>var</strong></em> <code>ThreeArraysFunc = Callable[[ArrayVar, ArrayVar, ArrayVar], ArrayVar]</code> <a class="header-anchor" href="#var-threearraysfunc-callable-arrayvar-arrayvar-arrayvar-arrayvar" aria-label="Permalink to &quot;***var*** `ThreeArraysFunc = Callable[[ArrayVar, ArrayVar, ArrayVar], ArrayVar]`&quot;">​</a></h3><ul><li><p><strong>類型</strong>: <code>TypeAlias</code></p></li><li><p><strong>説明</strong>: 三元数组函数</p></li></ul><h3 id="var-threevarsfunc-threesinglevarsfunc-threearraysfunc" tabindex="-1"><em><strong>var</strong></em> <code>ThreeVarsFunc = ThreeSingleVarsFunc | ThreeArraysFunc</code> <a class="header-anchor" href="#var-threevarsfunc-threesinglevarsfunc-threearraysfunc" aria-label="Permalink to &quot;***var*** `ThreeVarsFunc = ThreeSingleVarsFunc | ThreeArraysFunc`&quot;">​</a></h3><ul><li><p><strong>類型</strong>: <code>TypeAlias</code></p></li><li><p><strong>説明</strong>: 三元函数</p></li></ul><h3 id="var-multisinglevarsfunc-callable-singlevar" tabindex="-1"><em><strong>var</strong></em> <code>MultiSingleVarsFunc = Callable[..., SingleVar]</code> <a class="header-anchor" href="#var-multisinglevarsfunc-callable-singlevar" aria-label="Permalink to &quot;***var*** `MultiSingleVarsFunc = Callable[..., SingleVar]`&quot;">​</a></h3><ul><li><p><strong>類型</strong>: <code>TypeAlias</code></p></li><li><p><strong>説明</strong>: 多元单变量函数</p></li></ul><h3 id="var-multiarraysfunc-callable-arrayvar" tabindex="-1"><em><strong>var</strong></em> <code>MultiArraysFunc = Callable[..., ArrayVar]</code> <a class="header-anchor" href="#var-multiarraysfunc-callable-arrayvar" aria-label="Permalink to &quot;***var*** `MultiArraysFunc = Callable[..., ArrayVar]`&quot;">​</a></h3><ul><li><p><strong>類型</strong>: <code>TypeAlias</code></p></li><li><p><strong>説明</strong>: 多元数组函数</p></li></ul><h3 id="var-multivarsfunc-multisinglevarsfunc-multiarraysfunc" tabindex="-1"><em><strong>var</strong></em> <code>MultiVarsFunc = MultiSingleVarsFunc | MultiArraysFunc</code> <a class="header-anchor" href="#var-multivarsfunc-multisinglevarsfunc-multiarraysfunc" aria-label="Permalink to &quot;***var*** `MultiVarsFunc = MultiSingleVarsFunc | MultiArraysFunc`&quot;">​</a></h3><ul><li><p><strong>類型</strong>: <code>TypeAlias</code></p></li><li><p><strong>説明</strong>: 多元函数</p></li></ul>',34),i=[o];function t(s,c,u,g,v,d){return e(),r("div",null,i)}const m=a(n,[["render",t]]);export{p as __pageData,m as default};
