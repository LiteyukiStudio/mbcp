import{_ as a,c as r,o as e,a2 as l}from"./chunks/framework.BV61Qrc0.js";const m=JSON.parse('{"title":"mbcp.mp_math.mp_math_typing","description":"","frontmatter":{"title":"mbcp.mp_math.mp_math_typing"},"headers":[],"relativePath":"api/mp_math/mp_math_typing.md","filePath":"api/mp_math/mp_math_typing.md"}'),n={name:"api/mp_math/mp_math_typing.md"},i=l('<h3 id="var-realnumber-typealias-int-float" tabindex="-1"><em><strong>var</strong></em> <code>RealNumber: TypeAlias = int | float</code> <a class="header-anchor" href="#var-realnumber-typealias-int-float" aria-label="Permalink to &quot;***var*** `RealNumber: TypeAlias = int | float`&quot;">​</a></h3><h3 id="var-number-typealias-realnumber-complex" tabindex="-1"><em><strong>var</strong></em> <code>Number: TypeAlias = RealNumber | complex</code> <a class="header-anchor" href="#var-number-typealias-realnumber-complex" aria-label="Permalink to &quot;***var*** `Number: TypeAlias = RealNumber | complex`&quot;">​</a></h3><h3 id="var-singlevar-typevar-singlevar-bound-number" tabindex="-1"><em><strong>var</strong></em> <code>SingleVar = TypeVar(&#39;SingleVar&#39;, bound=Number)</code> <a class="header-anchor" href="#var-singlevar-typevar-singlevar-bound-number" aria-label="Permalink to &quot;***var*** `SingleVar = TypeVar(&#39;SingleVar&#39;, bound=Number)`&quot;">​</a></h3><h3 id="var-arrayvar-typevar-arrayvar-bound-iterable-number" tabindex="-1"><em><strong>var</strong></em> <code>ArrayVar = TypeVar(&#39;ArrayVar&#39;, bound=Iterable[Number])</code> <a class="header-anchor" href="#var-arrayvar-typevar-arrayvar-bound-iterable-number" aria-label="Permalink to &quot;***var*** `ArrayVar = TypeVar(&#39;ArrayVar&#39;, bound=Iterable[Number])`&quot;">​</a></h3><h3 id="var-var-typealias-singlevar-arrayvar" tabindex="-1"><em><strong>var</strong></em> <code>Var: TypeAlias = SingleVar | ArrayVar</code> <a class="header-anchor" href="#var-var-typealias-singlevar-arrayvar" aria-label="Permalink to &quot;***var*** `Var: TypeAlias = SingleVar | ArrayVar`&quot;">​</a></h3><h3 id="var-onesinglevarfunc-typealias-callable-singlevar-singlevar" tabindex="-1"><em><strong>var</strong></em> <code>OneSingleVarFunc: TypeAlias = Callable[[SingleVar], SingleVar]</code> <a class="header-anchor" href="#var-onesinglevarfunc-typealias-callable-singlevar-singlevar" aria-label="Permalink to &quot;***var*** `OneSingleVarFunc: TypeAlias = Callable[[SingleVar], SingleVar]`&quot;">​</a></h3><h3 id="var-onearrayfunc-typealias-callable-arrayvar-arrayvar" tabindex="-1"><em><strong>var</strong></em> <code>OneArrayFunc: TypeAlias = Callable[[ArrayVar], ArrayVar]</code> <a class="header-anchor" href="#var-onearrayfunc-typealias-callable-arrayvar-arrayvar" aria-label="Permalink to &quot;***var*** `OneArrayFunc: TypeAlias = Callable[[ArrayVar], ArrayVar]`&quot;">​</a></h3><h3 id="var-onevarfunc-typealias-onesinglevarfunc-onearrayfunc" tabindex="-1"><em><strong>var</strong></em> <code>OneVarFunc: TypeAlias = OneSingleVarFunc | OneArrayFunc</code> <a class="header-anchor" href="#var-onevarfunc-typealias-onesinglevarfunc-onearrayfunc" aria-label="Permalink to &quot;***var*** `OneVarFunc: TypeAlias = OneSingleVarFunc | OneArrayFunc`&quot;">​</a></h3><h3 id="var-twosinglevarsfunc-typealias-callable-singlevar-singlevar-singlevar" tabindex="-1"><em><strong>var</strong></em> <code>TwoSingleVarsFunc: TypeAlias = Callable[[SingleVar, SingleVar], SingleVar]</code> <a class="header-anchor" href="#var-twosinglevarsfunc-typealias-callable-singlevar-singlevar-singlevar" aria-label="Permalink to &quot;***var*** `TwoSingleVarsFunc: TypeAlias = Callable[[SingleVar, SingleVar], SingleVar]`&quot;">​</a></h3><h3 id="var-twoarraysfunc-typealias-callable-arrayvar-arrayvar-arrayvar" tabindex="-1"><em><strong>var</strong></em> <code>TwoArraysFunc: TypeAlias = Callable[[ArrayVar, ArrayVar], ArrayVar]</code> <a class="header-anchor" href="#var-twoarraysfunc-typealias-callable-arrayvar-arrayvar-arrayvar" aria-label="Permalink to &quot;***var*** `TwoArraysFunc: TypeAlias = Callable[[ArrayVar, ArrayVar], ArrayVar]`&quot;">​</a></h3><h3 id="var-twovarsfunc-typealias-twosinglevarsfunc-twoarraysfunc" tabindex="-1"><em><strong>var</strong></em> <code>TwoVarsFunc: TypeAlias = TwoSingleVarsFunc | TwoArraysFunc</code> <a class="header-anchor" href="#var-twovarsfunc-typealias-twosinglevarsfunc-twoarraysfunc" aria-label="Permalink to &quot;***var*** `TwoVarsFunc: TypeAlias = TwoSingleVarsFunc | TwoArraysFunc`&quot;">​</a></h3><h3 id="var-threesinglevarsfunc-typealias-callable-singlevar-singlevar-singlevar-singlevar" tabindex="-1"><em><strong>var</strong></em> <code>ThreeSingleVarsFunc: TypeAlias = Callable[[SingleVar, SingleVar, SingleVar], SingleVar]</code> <a class="header-anchor" href="#var-threesinglevarsfunc-typealias-callable-singlevar-singlevar-singlevar-singlevar" aria-label="Permalink to &quot;***var*** `ThreeSingleVarsFunc: TypeAlias = Callable[[SingleVar, SingleVar, SingleVar], SingleVar]`&quot;">​</a></h3><h3 id="var-threearraysfunc-typealias-callable-arrayvar-arrayvar-arrayvar-arrayvar" tabindex="-1"><em><strong>var</strong></em> <code>ThreeArraysFunc: TypeAlias = Callable[[ArrayVar, ArrayVar, ArrayVar], ArrayVar]</code> <a class="header-anchor" href="#var-threearraysfunc-typealias-callable-arrayvar-arrayvar-arrayvar-arrayvar" aria-label="Permalink to &quot;***var*** `ThreeArraysFunc: TypeAlias = Callable[[ArrayVar, ArrayVar, ArrayVar], ArrayVar]`&quot;">​</a></h3><h3 id="var-threevarsfunc-typealias-threesinglevarsfunc-threearraysfunc" tabindex="-1"><em><strong>var</strong></em> <code>ThreeVarsFunc: TypeAlias = ThreeSingleVarsFunc | ThreeArraysFunc</code> <a class="header-anchor" href="#var-threevarsfunc-typealias-threesinglevarsfunc-threearraysfunc" aria-label="Permalink to &quot;***var*** `ThreeVarsFunc: TypeAlias = ThreeSingleVarsFunc | ThreeArraysFunc`&quot;">​</a></h3><h3 id="var-multisinglevarsfunc-typealias-callable-singlevar" tabindex="-1"><em><strong>var</strong></em> <code>MultiSingleVarsFunc: TypeAlias = Callable[..., SingleVar]</code> <a class="header-anchor" href="#var-multisinglevarsfunc-typealias-callable-singlevar" aria-label="Permalink to &quot;***var*** `MultiSingleVarsFunc: TypeAlias = Callable[..., SingleVar]`&quot;">​</a></h3><h3 id="var-multiarraysfunc-typealias-callable-arrayvar" tabindex="-1"><em><strong>var</strong></em> <code>MultiArraysFunc: TypeAlias = Callable[..., ArrayVar]</code> <a class="header-anchor" href="#var-multiarraysfunc-typealias-callable-arrayvar" aria-label="Permalink to &quot;***var*** `MultiArraysFunc: TypeAlias = Callable[..., ArrayVar]`&quot;">​</a></h3><h3 id="var-multivarsfunc-typealias-multisinglevarsfunc-multiarraysfunc" tabindex="-1"><em><strong>var</strong></em> <code>MultiVarsFunc: TypeAlias = MultiSingleVarsFunc | MultiArraysFunc</code> <a class="header-anchor" href="#var-multivarsfunc-typealias-multisinglevarsfunc-multiarraysfunc" aria-label="Permalink to &quot;***var*** `MultiVarsFunc: TypeAlias = MultiSingleVarsFunc | MultiArraysFunc`&quot;">​</a></h3>',17),s=[i];function t(o,c,u,y,v,g){return e(),r("div",null,s)}const d=a(n,[["render",t]]);export{m as __pageData,d as default};
